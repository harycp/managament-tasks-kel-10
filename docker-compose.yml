version: "3.8"

services:
  # ------ Layanan Infrastruktur ------
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka_broker
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghij1234567890
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  # ------ Layanan Aplikasi Backend ------

  user-service:
    build: ./services/user-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - KAFKA_CLIENT_ID=user-service
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_CALLBACK_URL=${GITHUB_CALLBACK_URL}
      - RESET_PASSWORD_URL=${RESET_PASSWORD_URL}
      - CONFIRM_EMAIL_URL=${CONFIRM_EMAIL_URL}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_CLIENT_ID=${EMAIL_CLIENT_ID}
      - EMAIL_CLIENT_SECRET=${EMAIL_CLIENT_SECRET}

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_started

  workspace-service:
    build: ./services/workspace-service
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - KAFKA_CLIENT_ID=workspace-service
      - USER_SERVICE_URL=http://user-service:5001/api/users
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_started
      user-service:
        condition: service_started

  project-service:
    build: ./services/project-service
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - KAFKA_CLIENT_ID=project-service
      - USER_SERVICE_URL=http://user-service:5001/api/users
      - WORKSPACE_SERVICE_URL=http://workspace-service:5002/api/workspaces
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_started
      workspace-service:
        condition: service_started

  # ------ API Gateway & Frontend ------

  api-gateway:
    build: ./api-gateway
    ports:
      - "5000:5000"
    environment:
      - USER_SERVICE_URL=http://user-service:5001
      - WORKSPACE_SERVICE_URL=http://workspace-service:5002
      - PROJECT_SERVICE_URL=http://project-service:5003
    depends_on:
      - user-service
      - workspace-service
      - project-service

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - api-gateway

# Volume untuk persistensi data
volumes:
  postgres_data:
  redis_data:
  kafka_data:
